<?xml version='1.0' encoding='UTF-8'?>
<s:Application xmlns:d="http://ns.adobe.com/fxg/2008/dt" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" width="397" height="549" backgroundColor="#ffffff" xmlns:th="http://ns.adobe.com/thermo/2009">
	<fx:Script>
		<![CDATA[
			import mx.rpc.events.ResultEvent;

			protected function Button_click():void
			{
				var état:String = currentState;
				if ( état == 'open' ) {
					currentState='close';
				}
				if ( état == 'close' ) {
					currentState='open';
				}
			}


			protected function onResult(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
			}

			]]>

	</fx:Script>
	
	<fx:Declarations>
		<s:HTTPService id="service" result="onResult(event)"
	</fx:Declarations>
	
	<s:states>
		<s:State name="open"/>
		<s:State name="close"/>
	</s:states>
	
	<s:transitions>
		<s:Transition fromState="open" toState="close" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{button2}">
					<s:Move autoCenterTransform="true" startDelay="300" duration="400"/>
				</s:Parallel>
				<s:Parallel target="{bitmapimage1}">
					<s:Move autoCenterTransform="true" startDelay="300" duration="400"/>
				</s:Parallel>
				<s:Parallel target="{textinput1}">
					<s:Fade duration="400"/>
				</s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="400"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
		<s:Transition fromState="close" toState="open" autoReverse="true">
			<s:Parallel>
				<s:Parallel target="{bitmapimage1}">
					<s:Move autoCenterTransform="true" duration="400"/>
				</s:Parallel>
				<s:Parallel target="{button2}">
					<s:Move autoCenterTransform="true" duration="400"/>
				</s:Parallel>
				<s:Parallel target="{textinput1}">
					<s:Fade duration="400" startDelay="300"/>
				</s:Parallel>
				<s:Parallel target="{button1}">
					<s:Fade duration="400" startDelay="300"/>
				</s:Parallel>
			</s:Parallel>
		</s:Transition>
	</s:transitions>
	
	<s:BitmapImage source="@Embed('/assets/CATALYST/backgroundpanel.png')" resizeMode="scale" d:userLabel="backgroundpanel" y="6" y.close="81" id="bitmapimage1"/>
	<s:BitmapImage source="@Embed('/assets/CATALYST/background.png')" resizeMode="scale" d:userLabel="background" x="0" y="90"/>
	<s:Button skinClass="components.TaskBar" y.close="75" id="button2" click="Button_click()"/>
	
	<fx:DesignLayer d:userLabel="panel">
		<fx:DesignLayer d:userLabel="comps" th:visible.minimized="false">
			<s:TextInput x="21" y="37" skinClass="components.SearchInput" text="Search terms..." th:origVisible.minimized="true" visible.close="false" id="textinput1"/>
			<s:Button x="303" y="37" skinClass="components.SearchButton" label="SEARCH" th:origVisible.minimized="true" visible.close="false" id="button1"/>
		</fx:DesignLayer>
	</fx:DesignLayer>
	
	<fx:DesignLayer d:userLabel="news">
		<fx:DesignLayer d:userLabel="Image">
		</fx:DesignLayer>
	</fx:DesignLayer>
	
	<fx:DesignLayer d:userLabel="scrollbar">
		<s:List x="1" y="91" skinClass="components.DatasListRenderer">
			<s:ArrayCollection>
				<fx:Object image2="@Embed('/assets/CATALYST/photo.png')" image3="@Embed('/assets/CATALYST/bordures_1.png')" text1="In mi dui, viverra sed viverra ac, scelerisque non ante. Ut lacus felis, vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictumst. Vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictums." text2="PLAYING WITH RIBBONS"/>
				<fx:Object image2="@Embed('/assets/CATALYST/photo.png')" image3="@Embed('/assets/CATALYST/bordures_1.png')" text1="In mi dui, viverra sed viverra ac, scelerisque non ante. Ut lacus felis, vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictumst. Vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictums." text2="PLAYING WITH RIBBONS"/>
				<fx:Object image2="@Embed('/assets/CATALYST/photo.png')" image3="@Embed('/assets/CATALYST/bordures_1.png')" text1="In mi dui, viverra sed viverra ac, scelerisque non ante. Ut lacus felis, vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictumst. Vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictums." text2="PLAYING WITH RIBBONS"/>
				<fx:Object image2="@Embed('/assets/CATALYST/photo.png')" image3="@Embed('/assets/CATALYST/bordures_1.png')" text1="In mi dui, viverra sed viverra ac, scelerisque non ante. Ut lacus felis, vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictumst. Vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictums." text2="PLAYING WITH RIBBONS"/>
				<fx:Object image2="@Embed('/assets/CATALYST/photo.png')" image3="@Embed('/assets/CATALYST/bordures_1.png')" text1="In mi dui, viverra sed viverra ac, scelerisque non ante. Ut lacus felis, vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictumst. Vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictums." text2="PLAYING WITH RIBBONS"/>
				<fx:Object image2="@Embed('/assets/CATALYST/photo.png')" image3="@Embed('/assets/CATALYST/bordures_1.png')" text1="In mi dui, viverra sed viverra ac, scelerisque non ante. Ut lacus felis, vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictumst. Vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictums." text2="PLAYING WITH RIBBONS"/>
				<fx:Object image2="@Embed('/assets/CATALYST/photo.png')" image3="@Embed('/assets/CATALYST/bordures_1.png')" text1="In mi dui, viverra sed viverra ac, scelerisque non ante. Ut lacus felis, vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictumst. Vestibulum id lobortis ac, pretium ultrices augue. In hac habitasse platea dictums." text2="PLAYING WITH RIBBONS"/>
			</s:ArrayCollection>
		</s:List>
	</fx:DesignLayer>
	
</s:Application>
