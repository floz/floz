/*** Written by :* @author Floz* www.floz.fr || www.minuit4.fr*/package {	import flash.events.Event;	import fr.minuit4.tools.musicPlayer.MusicPlayer;	import fr.minuit4.tools.musicPlayer.views.Device;	import fr.minuit4.tools.musicPlayer.views.Playlist;	import flash.display.Sprite;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	public class MainMusicPlayer extends Sprite	{			// - PRIVATE VARIABLES -----------------------------------------------------------				private var _mPlayer:MusicPlayer;				// - PUBLIC VARIABLES ------------------------------------------------------------				// - CONSTRUCTOR -----------------------------------------------------------------				public function MainMusicPlayer()		{			stage.scaleMode = StageScaleMode.NO_SCALE;            stage.align = StageAlign.TOP_LEFT;            			var device:Device = new Device();                                   var playlist:Playlist = new Playlist();            playlist.y = device.height - 1;                                         _mPlayer = new MusicPlayer( device, playlist );            _mPlayer.x = stage.stageWidth * .5 - _mPlayer.width * .5;            _mPlayer.y = stage.stageHeight * .5 - _mPlayer.height * .5;            addChild( _mPlayer );                        _mPlayer.addSong( { url: String( path_mp3 + "08 - Boards Of Canada - Kaini Industries.mp3" ), artist: "Boards Of Canada", title: "Kaini Industries", duration: 59000 } );            _mPlayer.addSong( { url: String( path_mp3 + "01  Feist - So Sorry.mp3" ), artist: "Feist", title: "So Sorry", duration: 189000 } );                        stage.addEventListener( Event.RESIZE, onResize );						}		// - EVENTS HANDLERS -------------------------------------------------------------				private function onResize(event:Event):void		{			_mPlayer.x = stage.stageWidth * .5 - _mPlayer.width * .5;            _mPlayer.y = stage.stageHeight * .5 - _mPlayer.height * .5;		}				// - PRIVATE METHODS -------------------------------------------------------------				// - PUBLIC METHODS --------------------------------------------------------------				// - GETTERS & SETTERS -----------------------------------------------------------				 public function get path_xml():String { return loaderInfo.parameters[ "path_xml" ] || "xml/"; }         public function get playlist_xml():String { return loaderInfo.parameters[ "playlist_xml" ] || "playlist.xml"; }         public function get config_xml():String { return loaderInfo.parameters[ "config_xml" ] || "config.xml"; }         public function get path_mp3():String { return loaderInfo.parameters[ "path_mp3" ] || "mp3/"; }	}	}